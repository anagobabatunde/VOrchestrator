name: Create Release

on:
  push:
    tags:
      - 'v*' # Run when tag is pushed matching pattern v*, like v0.1.0

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: VOrchestrator ${{ github.ref_name }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
  
  build-linux:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup V
        uses: vlang/setup-v@v1
        with:
          check-latest: true
      
      - name: Build for Linux
        run: v -prod .
      
      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./VOrchestrator
          asset_name: VOrchestrator-linux
          asset_content_type: application/octet-stream
  
  build-macos:
    needs: create-release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup V
        uses: vlang/setup-v@v1
        with:
          check-latest: true
      
      - name: Build for macOS
        run: v -prod .
      
      - name: Upload macOS Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./VOrchestrator
          asset_name: VOrchestrator-macos
          asset_content_type: application/octet-stream
